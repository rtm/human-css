{"version":3,"sources":["src/index.css"],"names":[],"mappings":"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","file":"index.css","sourcesContent":[":root {\n  --global-hue:          240;\n  --global-saturation:   60%;\n  --global-lightness:    60%;\n  --global-alpha:        1.0;\n}\n\n/**\n * For the four attributes which take color-related values,\n * as well as `color` itself,\n * take the HSL-related values.\n */\n@each $module in background, border, color, text {\n  [$(module)~=primary]    { --$(module)-hue: var(--hue-primary);    }\n  [$(module)~=accent]     { --$(module)-hue: var(--hue-accent);  }\n  [$(module)~=success]    { --$(module)-hue: var(--hue-success);    }\n  [$(module)~=warn]       { --$(module)-hue: var(--hue-warn);       }\n  [$(module)~=error]      { --$(module)-hue: var(--hue-error);      }\n\n  @each $hue, $val in (red, 0), (orange, 30), (yellow, 60), (lime, 90), (green, 120), (aquamarine, 150), (cyan, 180), (azure, 210), (blue, 240), (purple, 270), (magenta, 300), (pink, 330) {\n    [$(module)~=$(hue)]        { --$(module)-hue: $(val);   }\n  }\n\n  [$(module)~=xx-bright]  { --$(module)-saturation: 100%; }\n  [$(module)~=x-bright]   { --$(module)-saturation: 80%;  }\n  [$(module)~=bright]     { --$(module)-saturation: 60%;  }\n  [$(module)~=medium-bright] { --$(module)-saturation: 50%; }\n  [$(module)~=dull]       { --$(module)-saturation: 40%;  }\n  [$(module)~=x-dull]     { --$(module)-saturation: 20%;  }\n  [$(module)~=xx-dull]    { --$(module)-saturation: 0%;   } /* completely gray */\n\n  [$(module)~=xx-light]   { --$(module)-lightness: 100%; }\n  [$(module)~=x-light]    { --$(module)-lightness: 80%;  }\n  [$(module)~=light]      { --$(module)-lightness: 60%;  }\n  [$(module)~=medium-light] { --$(module)-lightness: 50%; }\n  [$(module)~=dark]       { --$(module)-lightness: 40%;  }\n  [$(module)~=x-dark]     { --$(module)-lightness: 20%;  }\n  [$(module)~=xx-dark]    { --$(module)-lightness: 0%;   } /* completely black */\n\n  [$(module)~=opaque]        { --$(module)-alpha: 1.0; }\n  [$(module)~=translucent]   { --$(module)-alpha: 0.8; }\n  [$(module)~=x-translucent] { --$(module)-alpha: 0.6; }\n  [$(module)~=transparent]   { --$(module)-alpha: 0;   }\n}\n\n/**\n * The four attributew chih take color-related values also support relative values of HSL.\n * This does not apply to `color`, since at present CSS custom properties provide no way to access parent value.\n */\n@each $module in $(module), border, outline, text {\n  [$(module)] {\n    --$(module)-hue: var(--global-hue);\n    --$(module)-saturation: var(--global-saturation);\n    --$(module)-lightness: var(--global-lightness);\n    --$(module)-alpha: var(--global-alpha);\n  }\n\n  [$(module)~=brighter]   { --$(module)-saturation: calc(var(--global-saturation) + 10%); }\n  [$(module)~=duller]     { --$(module)-saturation: calc(var(--global-saturation) - 10%); }\n  [$(module)~=x-brighter] { --$(module)-saturation: calc(var(--global-saturation) + 20%); }\n  [$(module)~=x-duller]   { --$(module)-saturation: calc(var(--global-saturation) - 20%); }\n\n  [$(module)~=lighter]    { --$(module)-lightness: calc(var(--global-lightness) + 10%); }\n  [$(module)~=x-lighter]  { --$(module)-lightness: calc(var(--global-lightness) + 20%); }\n  [$(module)~=darker]     { --$(module)-lightness: calc(var(--global-lightness) - 10%); }\n  [$(module)~=x-darker]   { --$(module)-lightness: calc(var(--global-lightness) - 20%); }\n\n  [$(module)~=more-opaque]    { --$(module)-alpha: calc(var(--global-alpha) + 0.1); }\n  [$(module)~=less-opaque]    { --$(module)-alpha: calc(var(--global-alpha) - 0.1); }\n}\n\n/* BACKGROUND */\n\n[background][color] {\n  background-color: var(--color);\n}\n\n[background~=cover]   { background-size: cover; }\n[background~=contain] { background-size: contain; }\n\n/* background colors */[\nhipbackground~=color]      { background-color: hsla(var(--background-hue), var(--background-saturation), var(--background-lightness), var(--background-alpha)); }\n\n/* BORDER */\n\n/* .widths */\n:root {\n  --border-width-default:      medium;\n  --border-style-default:      solid;\n}\n\n[border] {\n  --border-width:      var(--border-width-default);\n  --border-style:      var(--border-style-default);\n  --border-hue:        var(--global-hue);\n  --border-saturation: var(--global-saturation);\n  --border-lightness:  var(--global-lightness);\n  --border-alpha:      var(--global-alpha);\n\n  border-color: hsla(var(--border-hue, --global-hue), var(--border-saturation), var(--border-lightness), var(--border-alpha));\n  border-width: var(--border-width);\n}\n\n/* border width */\n@each $border-width in medium, thin, thick {\n  [border~=$(border-width)]     { --border-width: $(border-width); }\n}\n\n@each $border-style in solid, dotted, dashed, groove, ridge, inset, outset, none {\n  [border~=$(border-style)]     { --border-style: $(border-style); }\n}\n\n/* border radius */\n[border~=rounded]   { border-radius: 0.5em; }\n[border~=x-rounded] { border-radius: 1.0em; }\n\n/* border sides */\n[border~=left]      { border-left-style:   var(--border-style); }\n[border~=right]     { border-right-style:  var(--border-style); }\n[border~=top]       { border-top-style:    var(--border-style); }\n[border~=bottom]    { border-bottom-style: var(--border-style); }\n[border]:not([border~=top]):not([border~=bottom]):not([border~=left]):not([border~=right]) { border-style: var(--border-style); }\n\n/* BOX SHADOW\n\nSupporting only identical x and y and no blur or spread radius.\n*/\n\n[box-shadow] {\n  --inset: ;\n  --box-shadow-offset: var(--length);\n\n  box-shadow: var(--inset) var(--box-shadow-offset) var(--box-shadow-offset) var(--color);\n}\n\n[box-shadow~=inset] {\n  --inset: inset;\n}\n\n/**\n * The `color` attribute is used for setting global color components.\n **/\n\n[color] {\n  --hue:        var(--global-hue);\n  --saturation: var(--global-saturation);\n  --lightness:  var(--global-lightness);\n  --alpha:      var(--global-alpha);\n\n  --color:      hsla(var(--hue, 0), var(--saturation, 50%), var(--lightness, 50%), var(--alpha, 1.0));\n}\n\n[text] {\n  --text-hue:        var(--global-hue);\n  --text-saturation: var(--global-saturation);\n  --text-lightness:  var(--global-lightness);\n  --text-alpha:      var(--global-alpha);\n}\n\n[text~=color]      { color: hsla(var(--text-hue), var(--text-saturation), var(--text-lightness), var(--text-alpha)); }\n\n/* RESET GLOBALS USING `hue`, `saturation`, `lightness` and `alpha` classes */\n\n/**\n *  COLUMN\n *\n * The `--number` variable will be set by classes such as \"two\".\n*/\n\n[columns]                      { column-count: 3; }\n[columns~=one], [columns~=1]   { column-count: 1; }\n[columns~=two], [columns~=2]   { column-count: 2; }\n[columns~=three], [columns~=3] { column-count: 3; }\n[columns~=four], [columns~=4]  { column-count: 4; }\n\n[columns~=balance] { column-fill: balance; }\n[columns~=auto]    { column-fill: auto; }\n[columns~=span]    { column-span: all; -webkit-column-span: all; }\n\n/* TODO: column-rule, column-gap */\n\n/* CURSOR */\n\n[cursor~=pointer] { cursor: pointer; }\n[pointer-events], [pointer-events][auto] {pointer-events: auto; }\n[pointer-events][no], [pointer-events][none] { pointer-events: none; }\n\n/* DIMENSDIONS */\n\n[width]      { width:      var(--length); }\n[height]     { height:     var(--length); }\n[min-height] { min-height: var(--length); }\n[max-width]  { max-width:  var(--length); }\n[min-width]  { min-width:  var(--length); }\n[block-size] { block-size: var(--length); }\n[max-block-size] { max-block-size: var(--length); }\n[min-block-size] { min-block-size: var(--length); }\n\n@each $prop in width, height, max-width, min-width, max-height, min-height {\n  [$(prop)~=max-content]        { $(prop): max-content; }\n  [$(prop)~=min-content]        { $(prop): min-content; }\n  [$(prop)~=available]          { $(prop): available;   }\n  [$(prop)~=fit-content]        { $(prop): fit-content; }\n  [$(prop)~=fill]               { $(prop): fill; }\n}\n\n/* BOX */\n\n[box~=border]             { box-sizing: border-box; }\n[box~=content]            { box-sizing: content-box; }\n\n[box~=block]              { display: block;    }\n[box~=hidden]             { display: none;     }\n[box~=inline]             { display: inline;   }\n[box~=inline][box~=block] { display: inline-block; }\n\n[box~=top]         { vertical-align: top;      }\n[box~=bottom]      { vertical-align: bottom;   }\n[box~=middle]      { vertical-align: middle;   }\n[box~=sub]         { vertical-align: sub;      }\n[box~=text-top]    { vertical-align: text-top; }\n\n/* FLEX */\n/*\n\nClasses defined:\n\nON CONTAINER:\n\nflex              Use flex display on this container.\ninline            Use inline flex display on this container.\nhorizontal        Distribute items horizontally (default).\nvertical          Distribute items vertically.\nwrap              Let items wrap to next row or column.\nreverse           Layout items in reverse order.\n\njustify           Distribute space between items in main direction.\njustify-gap       Distribute space at start, between items, and end in main direction.\njustify-h         Distribute space between items in horizontal direction.\njustify-h-gap     Distribute space at left, between items, and at right in horizontal direction.\njustify-v         Distribute space between items in vertical direction.\njustify-v-gap     Distribute space at top, between items, and at end in vertical direction.\n\nalign-top         Align tops of horizontal items.\nalign-middle      Align middles of horizontal items.\nalign-bottom      Align bottoms of horizontal items.\nalign-left        Align left edge of vertical items\nalign-center      Align center of vertical items.\nalign-right       Align right edge of vertical items.\n\nON ITEMS:\n\ngrow              Allow this item to grow.\nx-grow            Allow this item to grow more.\nno-shrink         Do not allow this item to shrink.\n\nself-top          Align flex child to top.\nself-middle       Align flex child to middle.\nself-bottom       Align flex child to bottom.\nself-left         Align flex child to left.\nself-center       Align flex child to center.\nself-right        Align flex child to right.\nself-stretch      Stretch flex child.\nself-baselnie     Align flex child to baseline.\n*/\n\n/*\nBasic display types for flex.\n`inline` is overloaded; by itself it yields `display: inline`.\n*/\n[flex]                   { display: flex;          }\n[flex~=inline]           { display: inline-flex;   }\n\n/*\nFLEX DIRECTION.\nNote that `vertical` and `horizontal` are also overloaded,\nas defined in `direction[css]`.\n*/\n[flex~=x]         { flex-direction: column; }\n[flex~=y]         { flex-direction: row;    }\n\n/*\nWRAPPING AND REVERSING.\nA `wrap` class turns the `flex-direction` property\ninto its wrapped variants.\nNote: `wrap` is an overloaded property with a different meaning without `flex`.\n*/\n[flex~=wrap]             { flex-wrap: wrap; }\n\n[flex~=reverse]          { flex-direction: row-reverse;    }\n[flex~=y][flex~=reverse] { flex-direction: column-reverse; }\n\n/*\nJUSTIFYING AND ALIGNING.\nSince I, for one, can never remember the difference between\n`align-items` and `justify-content`, provide human-oriented\ndirection-based micro-classes such as `top, `left`, etc.\nThese are interpreted differently depending on `flex-direction`.\n\nNote that `horizontal` is the default.\n*/\n\n/*\n`justify` by itself refers to justification on the main axis.\nThere are also `justify-v` and `justify-h` variants for clarity\nor for specifying justification on the cross-axis.\n`justify-gap` requests distributing space to start and end as well as between.\n*/\n[flex~=justify]           { justify-content: space-between; }\n[flex~=justify-gap]       { justify-content: space-around; }\n\n[flex~=top]               { align-items: flex-start; }\n[flex~=bottom]            { align-items: flex-end;   }\n[flex~=middle]            { align-items: center;     }\n\n[flex~=left]              { justify-content: flex-start; }\n[flex~=right]             { justify-content: flex-end;   }\n[flex~=center]            { justify-content: center;     }\n\n/* For horizontal containers, `justify-h` is the same as `justify`. */\n[flex~=justify-x]         { justify-content: space-between; }\n[flex~=justify-x-gap]     { justify-content: space-around;  }\n[flex~=justify-y]         { align-items: space-between;     }\n[flex~=justify-y-gap]     { align-items: space-around;      }\n\n[flex~=y][flex~=justify]  { justify-content: space-between;   }\n[flex~=y][flex~=justify-gap] { justify-content: space-around; }\n\n[flex~=y][flex~=top]      { justify-content: flex-start; }\n[flex~=y][flex~=bottom]   { justify-content: flex-end;   }\n[flex~=y][flex~=middle]   { justify-content: center;     }\n\n[flex~=y][flex~=left]     { align-items: flex-start; }\n[flex~=y][flex~=right]    { align-items: flex-end;   }\n[flex~=y][flex~=center]   { align-items: center;     }\n\n/* For y containers, `justify-v` is the same as `justify`. */\n[flex~=][flex~=justify-x]       { align-items: space-between;     }\n[flex~=y][flex~=justify-x-gap]  { align-items: space-around;      }\n[flex~+y][flex~=justify-y]      { justify-content: space-between; }\n[flex~=y][flex~=justify-y-gap]  { justify-content: space-around;  }\n\n/*\nGROWING AND SHRINKING.\nProvide micro-classes for common cases of grow and shrink.\n*/\n[grow] { flex-grow: 1; }\n[x-grow] { flex-grow: 2; }\n[no-shrink] { flex-shrink: 0; }\n\n/* TODO: add other self items */\n[self~=stretch] { align-self: stretch; }\n\n/* ORDER */\n[first] { order: -99; }\n[last]  { order: +99; }\n\n/* Self-alignment (of flex children) */\n[self~=top]      { align-self: flex-start; }\n[self~=middle]   { align-self: center; }\n[self~=bottom]   { align-self: flex-end; }\n[self~=left]     { align-self: flex-start; }\n[self~=center]   { align-self: center; }\n[self~=right]    { align-self: flex-end; }\n[self~=stretch]  { align-self: stretch; }\n[self~=baseline] { align-self: baseline; }\n\n/* FONT VARIANT */\n\n[small-caps] { font-variant: small-caps; }\n\n/* HYPHENS */\n\n/* Browser support is poor. */\n.hyphens-none   { hyphens: none; }\n.hyphens-auto   { hyphens: auto; }\n.hyphens-manual { hyphens: manual; }\n\n/* INDENT */\n\n[text~=indent]      { text-indent: 2em; }\n[text~=indent-more] { text-indent: 4em; }\n\n/* TEXT ALIGNMENT */\n\n[text~=left]        { text-align: left;        }\n[text~=right]       { text-align: right;       }\n[text~=center]      { text-align: center;      }\n[text~=justify]     { text-align: justify;     }\n[text~=start]       { text-align: start;       }\n[text~=end]         { text-align: end;         }\n[text~=justify-all] { text-align: justify-all; }\n\n/* LETTER SPACING */\n\n:root {\n  --text-spacing-loose:0.20em;\n  --text-spacing-x-loose:0.40em;\n  --text-spacing-tight:-0.05em;\n}\n\n[text~=loose]         { letter-spacing: var(--text-spacing-loose); }\n[text~=x-loose]       { letter-spacing: var(--text-spacing-x-loose); }\n[text~=tight]         { letter-spacing: var(--text-spacing-tight); }\n\n/* LINE HEIGHT */                                                                                            /\n\n[line][spacing] {\n  --line-height: 1.5;\n  line-height: var(--line-height);\n}\n\n[line][spacing][tight]        { --line-height: 1.2;    }\n[line][spacing][single]       { --line-height: 1.2;    }\n[line][spacing][normal]       { --line-height: normal; }\n[line][spacing][loose]        { --line-height: 1.5;    }\n[line][spacing][x-loose]      { --line-height: 2;      }\n[line][spacing][double]       { --line-height: 2;      }\n\n/* LISTS */\n\n[list~=inside]      { list-style-position: inside;  }\n[list~=outside]     { list-style-position: outside; }\n\n:root {\n  --list-alpha: lower-alpha;\n  --list-roman: lower-roman;\n}\n\n[list~=upper] { --list-alpha: upper-alpha; --list-roman: upper-romaon; }\n[list~=lower] { --list-alpha: lower-alpha; --list-roman: lower-romaon; }\n\n[list~=alpha]        { list-style-type: var(--list-alpha); }\n[list~=circle]       { list-style-type: circle;      }\n[list~=decimal]      { list-style-type: decimal;     }\n[list~=disc]         { list-style-type: disc;        }\n[list~=none]         { list-style-type: none;        }\n[list~=roman]        { list-style-type: var(--list-romain); }\n[list~=square]       { list-style-type: square;      }\n\n/* MARGINS */\n\n:root {\n  --margin-thin: 0.25em;\n  --margin-medium: 0.5em;\n  --margin-thick: 1.0em;\n}\n\n[margin~=left]   { margin-left:   var(--margin-length); }\n[margin~=right]  { margin-right:  var(--margin-length); }\n[margin~=top]    { margin-top:    var(--margni-length); }\n[margin~=bottom] { margin-bottom: var(--margin-length); }\n\n[margin~=thin]   { --margin-length: var(--margin-thin); }\n[margin~=medium] { --margin-length: var(--margin-medium); }\n[margin~=thick]  { --margin-length: var(--margin-thick); }\n[margin~=none]   { --margin-length: 0; }\n[margin~=no]     { --margin-length: 0; }\n\n/* With no side modifier, set on all sides. */\n[margin]:not([margin~=top]):not([margin~=bottom]):not([margin~=left]):not([margin~=right]) { margin: var(--length); }\n\n/* MEDIA */\n\n@media screen {\n  [print-only] { display: none !important; }\n}\n\n@media print {\n  [screen-only] { display: none !important; }\n}\n\n/* NUMBERS */\n\n/* units */\n[ch]       { --length: calc(var(--number) * 1ch);   }\n[cm]       { --length: calc(var(--number) * 1cm);   }\n[em]       { --length: calc(var(--number) * 1em);   }\n[ex]       { --length: calc(var(--number) * 1ex);   }\n[in]       { --length: calc(var(--number) * 1in);   }\n[mm]       { --length: calc(var(--number) * 1mm);   }\n[pc]       { --length: calc(var(--number) * 1pc);   }\n[pt]       { --length: calc(var(--number) * 1pt);   }\n[px]       { --length: calc(var(--number) * 1px);   }\n[q]        { --length: calc(var(--number) * 1q;)    }\n[rem]      { --length: calc(var(--number) * 1rem);  }\n[vh]       { --length: calc(var(--number) * 1vh);   }\n[vmax]     { --length: calc(var(--number) * 1vmax); }\n[vmin]     { --length: calc(var(--number) * 1vmin); }\n[vw]       { --length: calc(var(--number) * 1vw);   }\n\n[ms]       { --length: calc(var(--number) * 1ms);   }\n[s]        { --length: calc(var(--number) * 1s;)    }\n\n[deg]      { --length: calc(var(--number) * 1deg);  }\n[grad]     { --length: calc(var(--number) * 1grad); }\n[rad]      { --length: calc(var(--number) * 1rad);  }\n[turn]     { --length: calc(var(--number) * 1turn); }\n\n[ch], [cm], [em], [ex], [in], [mm], [pc], [pt], [px], [q], [rem], [vh], [vmax], [vmin], [vmax],\n[ms], [s],\n[deg], [grad], [rad], [turn],\n[ten], [twenty], [thirty], [forty], [fifty], [sixty], [seventy], [eighty], [ninety],\n[zero], [one], [two], [three], [four], [five], [six], [seven], [eight], [nine],\n[eleven], [twelve], [thirteen], [fourteen], [fifteen], [sixteen], [seventeen], [eighteen], [nineteen],\n[halves], [half], [thirds], [third], [fourths], [fourth], [fifths], [fifth], [sixths], [sixth], [sevenths], [seventh], [eighths], [eighth], [ninths], [ninth], [tenths], [tenth],\n[nothing], {\n  --denominator: 1;\n  --sign: 1;\n  --ones: 0;\n  --tens: 0;\n\n  --number: calc((((10 * var(--tens)) + var(--ones)) / var(--denominator)) * var(--sign));\n}\n\n/* \"Ones\" values are used in calculating unsigned number. */\n[zero]      { --number: 0; }\n[one]       { --ones: 1; }\n[two]       { --ones: 2; }\n[three]     { --ones: 3; }\n[four]      { --ones: 4; }\n[five]      { --ones: 5; }\n[six]       { --ones: 6; }\n[seven]     { --ones: 7; }\n[eight]     { --ones: 8; }\n[nine]      { --ones: 9; }\n[eleven]    { --ones: 11; }\n[twelve]    { --ones: 12; }\n[thirteen]  { --ones: 13; }\n[fourteen]  { --ones: 14; }\n[fifteen]   { --ones: 15; }\n[sixteen]   { --ones: 16; }\n[seventeen] { --ones: 17; }\n[eighteen]  { --ones: 18; }\n[nineteen]  { --ones: 19; }\n\n/* NUMBERS */\n[ten]       { --tens: 1; }\n[twenty]    { --tens: 2; }\n[thirty]    { --tens: 3; }\n[forty]     { --tens: 4; }\n[fifty]     { --tens: 5; }\n[sixty]     { --tens: 6; }\n[seventy]   { --tens: 7; }\n[eighty]    { --tens: 8; }\n[ninety]    { --tens: 9; }\n\n/* FRACTIONS */\n[\\30 .1]   { --unsigned-number: 0.1;  }\n[\\30 .2]   { --unsigned-number: 0.2;  }\n[\\30 .25]  { --unsigned-number: 0.25; }\n[\\30 .3]   { --unsigned-number: 0.3;  }\n[\\30 .4]   { --unsigned-number: 0.4;  }\n[\\30 .5]   { --unsigned-number: 0.5;  }\n[\\30 .6]   { --unsigned-number: 0.6;  }\n[\\30 .7]   { --unsigned-number: 0.7;  }\n[\\30 .75]  { --unsigned-number: 0.75; }\n[\\30 .8]   { --unsigned-number: 0.8;  }\n[\\31 .0]   { --unsigned-number: 1.0;  }\n[\\31 .5]   { --unsigned-number: 1.5;  }\n[\\32 .0]   { --unsigned-number: 2.0;  }\n\n[\\-0.1]   { --number: -0.1;  }\n[\\-0.2]   { --number: -0.2;  }\n[\\-0.25]  { --number: -0.25; }\n[\\-0.3]   { --number: -0.3;  }\n[\\-0.4]   { --number: -0.4;  }\n[\\-0.5]   { --number: -0.5;  }\n[\\-0.6]   { --number: -0.6;  }\n[\\-0.7]   { --number: -0.7;  }\n[\\-0.75]  { --number: -0.75; }\n[\\-0.8]   { --number: -0.8;  }\n[\\-1.0]   { --number: -1.0;  }\n[\\-1.5]   { --number: -1.5;  }\n[\\-2.0]   { --number: -2.0;  }\n\n/* Raw numbers. */\n[\\31]     { --unsigned-number: 1; }\n[\\32]     { --unsigned-number: 2; }\n[\\33]     { --unsigned-number: 3; }\n[\\34]     { --unsigned-number: 4; }\n[\\35]     { --unsigned-number: 5; }\n[\\36]     { --unsigned-number: 6; }\n[\\37]     { --unsigned-number: 7; }\n[\\38]     { --unsigned-number: 8; }\n[\\39]     { --unsigned-number: 9; }\n[\\31 0]   { --unsigned-number: 10; }\n[\\32 0]   { --unsigned-number: 20; }\n[\\33 0]   { --unsigned-number: 30; }\n[\\34 0]   { --unsigned-number: 40; }\n[\\35 0]   { --unsigned-number: 50; }\n[\\36 0]   { --unsigned-number: 60; }\n[\\37 0]   { --unsigned-number: 70; }\n[\\38 0]   { --unsigned-number: 80; }\n[\\39 0]   { --unsigned-number: 90; }\n[\\31 00]  { --unsigned-number: 100; }\n[\\32 00]  { --unsigned-number: 200; }\n[\\33 00]  { --unsigned-number: 300; }\n[\\34 00]  { --unsigned-number: 400; }\n[\\35 00]  { --unsigned-number: 500; }\n[\\36 00]  { --unsigned-number: 600; }\n[\\37 00]  { --unsigned-number: 700; }\n[\\38 00]  { --unsigned-number: 800; }\n[\\39 00]  { --unsigned-number: 900; }\n[\\31 000] { --unsigned-number: 1000; }\n[\\32 000] { --unsigned-number: 2000; }\n\n/* Negative numberbs. */\n[\\-1]     { --number: -1; }\n[\\-2]     { --number: -2; }\n[\\-3]     { --number: -3; }\n[\\-4]     { --number: -4; }\n[\\-5]     { --number: -5; }\n[\\-6]     { --number: -6; }\n[\\-7]     { --number: -7; }\n[\\-8]     { --number: -8; }\n[\\-9]     { --number: -9; }\n[\\-10]    { --number: -10; }\n[\\-20]    { --number: -20; }\n[\\-30]    { --number: -30; }\n[\\-40]    { --number: -40; }\n[\\-50]    { --number: -50; }\n[\\-60]    { --number: -60; }\n[\\-70]    { --number: -70; }\n[\\-80]    { --number: -80; }\n[\\-90]    { --number: -90; }\n\n[\\-100]   { --number: -100; }\n[\\-200]   { --number: -200; }\n[\\-300]   { --number: -300; }\n[\\-400]   { --number: -400; }\n[\\-500]   { --number: -500; }\n[\\-600]   { --number: -600; }\n[\\-700]   { --number: -700; }\n[\\-800]   { --number: -800; }\n[\\-900]   { --number: -900; }\n[\\-1000]  { --number: -1000; }\n\n/* PERCENTAGES */\n[full]         { --number: 1; }\n\n/* RATIONALS */\n[\\31 \\/2]      { --unsigned-number: calc(1 / 2); }\n[\\31 \\/3]      { --unsigned-number: calc(1 / 3); }\n[\\31 \\/4]      { --unsigned-number: calc(1 / 5); }\n[\\31 \\/5]      { --unsigned-number: calc(1 / 5); }\n[\\31 \\/6]      { --unsigned-number: calc(1 / 6); }\n[\\31 \\/7]      { --unsigned-number: calc(1 / 7); }\n[\\31 \\/8]      { --unsigned-number: calc(1 / 8); }\n[\\31 \\/9]      { --unsigned-number: calc(1 / 9); }\n[\\31 \\/10]     { --unsigned-number: calc(1 / 10); }\n\n[\\-\\31 \\/2]    { --number: calc(-1 / 2); }\n[\\-\\31 \\/3]    { --number: calc(-1 / 3); }\n[\\-\\31 \\/4]    { --number: calc(-1 / 5); }\n[\\-\\31 \\/5]    { --number: calc(-1 / 5); }\n[\\-\\31 \\/6]    { --number: calc(-1 / 6); }\n[\\-\\31 \\/7]    { --number: calc(-1 / 7); }\n[\\-\\31 \\/8]    { --number: calc(-1 / 8); }\n[\\-\\31 \\/9]    { --number: calc(-1 / 9); }\n[\\-\\31 \\/10]   { --number: calc(-1 / 10); }\n\n/* Explicit percentages */\n[\\31 0\\%]       { --length: 10%; }\n[\\32 0\\%]       { --length: 20%; }\n[\\32 5\\%]       { --length: 25%; }\n[\\33 0\\%]       { --length: 30%; }\n[\\34 0\\%]       { --length: 40%; }\n[\\34 0\\%]       { --length: 50%; }\n[\\36 0\\%]       { --length: 60%; }\n[\\37 0\\%]       { --length: 70%; }\n[\\37 5\\%]       { --length: 75%; }\n[\\38 0\\%]       { --length: 80%; }\n[\\39 0\\%]       { --length: 90%; }\n[\\31 00\\%]      { --length: 100%; }\n\n[\\-\\31 0\\%]     { --length: -10%; }\n[\\-\\32 0\\%]     { --length: -20%; }\n[\\-\\33 0\\%]     { --length: -30%; }\n[\\-\\34 0\\%]     { --length: -40%; }\n[\\-\\35 0\\%]     { --length: -50%; }\n[\\-\\36 0\\%]     { --length: -60%; }\n[\\-\\37 0\\%]     { --length: -70%; }\n[\\-\\38 0\\%]     { --length: -80%; }\n[\\-\\39 0\\%]     { --length: -90%; }\n[\\-\\31 00\\%]    { --length: -100%; }\n\n[\\30]           { --length: 0; }\n\n/* Support \"three fifths\" etc. */\n[halves], [half]      { --denominator: 2; }\n[thirds], [third]     { --denominator: 3; }\n[fourths], [fourth]   { --denominator: 4; }\n[fifths], [fifth]     { --denominator: 5; }\n[sixths], [sixth]     { --denominator: 6; }\n[sevenths], [seventh] { --denominator: 7; }\n[eighths], [eighth]   { --denominator: 8; }\n[ninths], [ninth]     { --denominator: 9; }\n[tenths], [tenth]     { --denominator: 10; }\n\n[minus]   { --sign: -1; }\n[size]    { --length: calc(100% * var(--number)); }\n[percent] { --length: calc(1% * var(--number)); }\n\n/* OPACITY */\n\n[opaque]      { opacity: 1;   }\n[semi-opaque] { opacity: 0.5; }\n[transparent] { opacity: 0;   }\n\n[opacity] { opacity: var(--number); }\n\n/* OUTLINE */\n\n:root {\n  --outline-width-global:      medium;\n  --outline-style-global:      none;\n  --outline-hue-global:        var(--hue-global);\n  --outline-saturation-global: var(--saturation-global);\n  --outline-lightness-global:  var(--lightness-global);\n  --outline-alpha-global:      var(--alpha-global);;\n}\n\n[outline] {\n  --outline-style:  var(--outline-style-global);\n  --outline-width:  var(--length);\n  --outline-color:  var(--color);\n}\n\n[outline]            { --outline-width: medium; }\n[outline][medium]    { --outline-width: medium; }\n[outline][thin]      { --outline-width: thin;   }\n[outline][thick]     { --outline-width: thick;  }\n\n/* STYLES */\n[outline]            { --outline-style: solid;  }\n[outline][solid]     { --outline-style: solid;  }\n[outline][dotted]    { --outline-style: dotted; }\n[outline][dashed]    { --outline-style: dashed; }\n[outline][groove]    { --outline-style: groove; }\n[outline][ridge]     { --outline-style: ridge;  }\n[outline-inset]      { --outline-style: insert; }\n[outline][outset]    { --outline-style: outset; }\n\n[outline][left]   { outline-left-style:   var(--outline-style); }\n[outline][right]  { outline-right-style:  var(--outline-style); }\n[outline][top]    { outline-top-style:    var(--outline-style); }\n[outline][bottom] { outline-bottom-style: var(--outline-style); }\n[outline]:not([top]):not([bottom]):not([left]):not([right]) { outline-style: var(--outline-style); }\n\n/* OVERFLOW */\n\n[overflow][scroll] { --overflow: scroll; }\n[overflow][hidden] { --overflow: hidden; }\n\n[overflow][x], [overflow][horizontal] { overflow-x: var(--overflow); }\n[overflow][y], [overflow][vertical]   { overflow-y: var(--overflow); }\n\n[overflow]:not([x]):not([horizontal]):not([y]):not([vertical]) { overflow: var(--overflow); }\n\n/* PADDING */\n\n[padding]      { --length: 1em; }\n\n[padding][left]   { padding-left:   var(--length);   }\n[padding][right]  { padding-right:  var(--length);   }\n[padding][top]    { padding-top:    var(--length);   }\n[padding][bottom] { padding-bottom: var(--length);   }\n\n/* With no side modifier, set on all sides. */\n[padding][thin]   { --length: 0.25em; }\n[padding][medium] { --length: 0.5em; }\n[padding][thick]  { --length: 1.0em; }\n\n[padding]:not([top]):not([bottom]):not([left]):not([right]) { padding: var(--length); }\n\n/* TODO: handle\npadding-block-end\npadding-block-start\npadding-bottom\npadding-inline-end\npadding-inline-start\n*/\n\n/* POSITION */\n\n[absolute] { position: absolute; }\n[relative] { position: relative; }\n[fixed]    { position: fixed;    }\n[sticky]   { position: sticky;   }\n\n[top-left] { top: 0; left: 0; }\n\n/* QUOTES */\n\n/* Define smart quotes. */\nq { quotes: '\\201c' '\\201d'; }\n\nq::before { content: open-quote; }\nq::after  { content: close-quote; }\n\n/* RESIZE */\n\n[resize]                       { resize: both;       }\n[resize][horizontal][vertical] { resize: both;       }\n[resize][horizontal]           { resize: horizontal; }\n[resize][vertical]             { resize: vertical;   }\n\n/* RUBY */\n\n[ruby][inter-character] { ruby-position: inter-character; }\n[ruby][left]            { ruby-position: left;       }\n[ruby][over]            { ruby-position: over;       }\n[ruby][right]           { ruby-position: right;      }\n[ruby][under]           { ruby-position: under;      }\n[ruby][after]           { ruby-position: after;  -webkit-ruby-position: after; }\n[ruby][before]          { ruby-position: before; -webkit-ruby-position: before; }\n\n[ruby][start]           { ruby-align: start;         }\n[ruby][center]          { ruby-align: center;        }\n\n/* These class names are meant to be aligned with those for flex. */\n[ruby][justify]         { ruby-align: space-between; }\n[ruby][justify-gap]     { ruby-align: space-around;  }\n\n/* No browser implements these. */\n[ruby-separate]         { ruby-merge: separate;      }\n[ruby-collapse]         { ruby-merge: collapse;      }\n\n/**\n * SPACING\n *\n * Vertical spacing between elements.\n *\n * The `[spaced]` class adds space to each child element except the last.\n * The `[loose]`. and `[tight]` modifiers expand and reduce that space, respectively.\n * Note: this puts space BEFORE all elements, including the first!\n **/\n\n[spaced] > *::before {\n  white-space: pre;\n  display: block;\n}\n\n[spaced] > :not(:first-child)::before {\n  content: ' ';\n}\n\n[spaced][before] > :first-child::before {\n  content: ' ';\n}\n\n[spaced]          > *::before { line-height: 1;    }\n[spaced][loose]   > *::before { line-height: 1.5;  }\n[spaced][x-loose] > *::before { line-height: 2;    }\n[spaced][tight]   > *::before { line-height: 0.5;  }\n[spaced][x-tight] > *::before { line-height: 0.25; }\n\n/* TEXT */\n\n/* colors */\n[text] {\n  color: var(--color);\n  font-size: var(--length);\n}\n\n/* font weight */\n\n[font~=hairline]      { font-weight: 100; }\n[font~=x-light]       { font-weight: 200; }\n[font~=light]         { font-weight: 300; }\n[font~=normal]        { font-weight: 400; }\n[font~=semi-bold]     { font-weight: 600; }\n[font~=bold]          { font-weight: 700; }\n[font~=x-bold]        { font-weight: 800; }\n[font~=heavy]         { font-weight: 900; }\n\n[font~=lighter]       { font-weight: lighter; }\n[font~=bolder]        { font-weight: bolder;  }\n\n\n/* SIZE */\n[font~=xx-small]     { --length: xx-small; }\n[font~=x-small]      { --length: x-small;  }\n[font~=small]        { --length: small;    }\n[font~=medium]       { --length: medium;   }\n[font~=large]        { --length: large;    }\n[font~x-large]       { --length: x-large;  }\n[font~=xx-large]     { --length: xx-large; }\n\n[font~=larger]       { --length: larger;   }\n[font~=smaller]      { --length: smaller;  }\n\n/* italics */\n[font~=emphasis]     { font-style: italic;  }\n[font~=italic]       { font-style: italic;  }\n\n/* text-TRANSFORM */\n[text][upper]        { text-transform: uppercase;  }\n[text][lower]        { text-transform: lowercase;  }\n[text][capitalize]   { text-transform: capitalize; }\n\n[underline]          { text-decoration: underline; }\n[no-underline]      { text-decvoration: none; }\n\n/* alignment */\n[text][right]        { text-align: right;   }\n[text][center]       { text-align: center;  }\n[text][left]         { text-align: left;    }\n\n/* TRANSITION */\n\n/* transition all properties */\n[transition] {\n  transition-property: all;\n  --transition-duration: 0.75s;\n  transition-duration: var(--transition-duration);\n}\n\n/* duration */\n[transition~=fast]         { --transition-duration: 0.50s; }\n[transition~=x-fast]       { --transition-duration: 0.25s; }\n[transition~=slow]         { --transition-duration: 1.00s; }\n[transition~=x-slow]       { --transition-duration: 2.00s; }\n\n/* timing functions */\n[transition~=ease]         { transition-timing-function: ease;        }\n[transition~=ease-in]      { transition-timing-function: ease-in;     }\n[transition~=ease-in-out]  { transition-timing-function: ease-in-out; }\n[transition~=linear]       { transition-timing-function: linear;      }\n[transition!=step]         { transition-timing-function: step-start;  }\n[transition~=step-start]   { transition-timing-function: step-start;  }\n[transition~=step-end]     { transition-timing-function: step-end;    }\n\n/* delay */\n[transition~=delay]       { transition-delay: 0.8s; }\n[transition~=delay-more]  { transition-delay: 1.6s; }\n[transition~-delay-less]  { transition-delay: 0.4s; }\n\n/* VISIBILITY */\n\n[visible]   { visibility: visible; }\n[invisible] { visibility: hidden;  }\n\n/* WHITE SPACE */\n\n/*\nBreak down `white-space` semantically.\n\nI don't know about you, but I can never remember the values for `white-space`.\nEvery time I want to use one, I have to look it up again.\nActually, it's quite easy when you break it down.\nThe properties each indicate a combination of whether newlines are to be honored,\nwhether whitespace is to be preserved, and whether wrapping is desired.\n\nThese human CSS micro-attributes map those concepts into `white-space` values,\nso hopefully you'll never have to consult that page again.\n\nAttributes defined:\n\nnewlines        Treat newlines as newlines.\nspaces          Do not collapse whitespace.\nnowrap          Do not wrap.\n*/\n\n/*\nHonor newlines, but do not preserve whitespace and wrap.\nThis corresponds to the common case of displaying a user post.\n*/\n[whitespace~=newlines] { white-space: pre-line; }\n\n/*\nHonor newlines while also preserving whitespace.\n*/\n[whitespace~=newlines][whitespace~=spaces] { white-space: pre-wrap; }\n\n/*\nHonor newlines, preserve whitespace, and do not wrap.\nThis replicates the behavior of `<pre>'.\nYou are probably better off using `pre`, although it will\nalso give you a monospaced font and vertical padding.\n*/\n[whitespace], [whitespace~=newlines][whitespace~=spaces][whitespace~=nowrap] { white-space: pre; }\n\n/*\nWithout honoring newlines, no wrapping means that the output will be on a single line.\nIn this case, whitespace is never preserved.\nCSS offers no alternative for preserving whitespace while not honoring newlines and not wrapping.\n*/\n[whitespace~=nowrap] { white-space: nowrap; }\n\n[break-word] { overflow-wrap: break-word; }\n\n/* Z-INDEX */\n\n[back]              { z-index: -1;   }\n[front]             { z-index: +1;   }\n[backmost]          { z-index: -999; }\n[frontmost]         { z-index: +999; }\n\n/* SCROLL SNAP */\n\n[scroll-snap] {\n  --scroll-snap-direction: y;\n  --scroll-snap-type: proximity;\n\n  scroll-snap-type: var(--scroll-snap-direction) var(--scroll-snap-type);\n}\n\n\n[scroll-snap][x]             { --scroll-snap-direction: x; }\n[scroll-snap][mandatory]     { --scroll-snap-type: mandatory; }\n\n[scroll-snap-align] {\n  --scroll-snap-align: start;\n\n  scroll-snap-align: var(--scroll-snap-align);\n}\n\n[scroll-snap-align][start]   { --scroll-snap-align: start; }\n[scroll-snap-align][center]  { --scroll-snap-align: center; }\n[scroll-snap-align][end]     { --scroll-snap-align: end; }\n"]}